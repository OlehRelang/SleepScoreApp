from flask import Flask, request
from keras._tf_keras.keras.saving import load_model
import numpy as np
from sklearn.preprocessing import StandardScaler

model = load_model(r'fc2.best_model.keras')

app = Flask(__name__)


@app.route('/model', methods=['POST'])
def serve_model():
    request_data = request.get_json(force=True)
    data = request_data['data']
    ss = StandardScaler()
    ss.scale_ = np.array([7.55978113e+02, 4.62928315e+03, 2.27041126e+01, 7.33464821e+01,
                          2.23566768e+01, 7.84189099e+00, 1.16479267e+02, 7.95555845e+01,
                          2.24725469e+01, 2.70068187e+01, 4.06994168e-02, 1.27035013e+02,
                          7.49146473e+01, 2.13959180e+01, 1.08518072e+01, 4.44000077e+01,
                          2.79245732e+00, 4.46629778e-01, 4.61391279e-01, 4.20419789e-01,
                          4.76534639e-01, 4.76534639e-01, 5.59633028e-01, 4.59838076e-01,
                          2.53126232e-01, 2.75229358e-01])
    ss.mean_ = np.array([3.25213449e+03, 1.11898186e+04, 1.53018349e+02, 2.29848624e+02,
                         2.79036697e+01, 5.88049431e+01, 6.41275229e+02, 4.08892501e+02,
                         5.96723236e+01, 7.16009174e+01, 9.43886717e-02, 1.21600459e+03,
                         1.14665138e+02, 1.63440367e+01, 4.83486239e+00, 6.50412844e+01,
                         1.02717637e+01, 2.75229358e-01, 6.92660550e-01, 7.70642202e-01,
                         3.48623853e-01, 6.51376147e-01, 4.67889908e-01, 7.38532110e-01,
                         6.88073394e-02, 8.25688073e-02])
    ss.var_ = np.array([5.71502907e+05, 2.14302625e+07, 5.15476728e+02, 5.37970644e+03,
                        4.99820996e+02, 6.14952543e+01, 1.35674197e+04, 6.32909102e+03,
                        5.05015362e+02, 7.29368256e+02, 1.65644253e-03, 1.61378945e+04,
                        5.61220438e+03, 4.57785308e+02, 1.17761720e+02, 1.97136068e+03,
                        7.79781790e+00, 1.99478158e-01, 2.12881912e-01, 1.76752799e-01,
                        2.27085262e-01, 2.27085262e-01, 3.13189125e-01, 2.11451056e-01,
                        6.40728895e-02, 7.57511994e-02])

    return model.predict(ss.transform(np.array([np.array(data)]))).tolist()


if __name__ == '__main__':
    app.run()
